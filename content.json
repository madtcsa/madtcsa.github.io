{"meta":{"title":"kkxx","subtitle":null,"description":null,"author":"kkxx","url":"http://yoursite.com"},"pages":[{"title":"about","date":"2016-12-28T01:54:57.000Z","updated":"2016-12-28T02:10:14.000Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"&#x672C;&#x6587;&#x94FE;&#x63A5;&#xFF1A;&lt;%= post.title %&gt; &#x4F5C;&#x8005;&#xFF1A;madtcsa &#x51FA;&#x5904;&#xFF1A;http://madtcsa.github.io/&#x672C;&#x6587;&#x57FA;&#x4E8E; &#x77E5;&#x8BC6;&#x5171;&#x4EAB;&#x7F72;&#x540D;-&#x76F8;&#x540C;&#x65B9;&#x5F0F;&#x5171;&#x4EAB; 4.0 &#x56FD;&#x9645;&#x8BB8;&#x53EF;&#x534F;&#x8BAE;&#x53D1;&#x5E03;&#xFF0C;&#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x6F14;&#x7ECE;&#x6216;&#x7528;&#x4E8E;&#x5546;&#x4E1A;&#x76EE;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x5FC5;&#x987B;&#x4FDD;&#x7559;&#x672C;&#x6587;&#x7684;&#x7F72;&#x540D;Madtcsa&#x53CA;&#x94FE;&#x63A5;&#x3002;","raw":null,"content":null},{"title":"categories","date":"2016-12-25T07:40:03.000Z","updated":"2017-01-01T13:43:23.000Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":"categories: Technology Ideas Caprice Reading Notes Writing Others","raw":null,"content":null},{"title":"tags","date":"2016-12-25T07:39:11.000Z","updated":"2017-01-01T11:15:09.000Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":"tags: Android Java &#x6027;&#x80FD;&#x4F18;&#x5316; &#x5185;&#x5B58;&#x4F18;&#x5316; View","raw":null,"content":null}],"posts":[{"title":"Android SharedPreferences","slug":"Android-SharedPreferences","date":"2017-12-03T15:15:22.000Z","updated":"2017-12-21T12:42:28.582Z","comments":true,"path":"2017/12/03/Android-SharedPreferences/","link":"","permalink":"http://yoursite.com/2017/12/03/Android-SharedPreferences/","excerpt":"","text":"SharedPreferences&#x5206;&#x6790;&#x548C;&#x4F7F;&#x7528;SharedPreferences(&#x4E0B;&#x79F0;SP)&#x5728;&#x5E73;&#x65F6;&#x5F00;&#x53D1;&#x5E94;&#x7528;&#x6BD4;&#x8F83;&#x591A;&#x3002;&#x6211;&#x5E94;&#x7528;SP&#x4E3B;&#x8981;&#x7528;&#x4E8E;&#x4FDD;&#x5B58;&#x4E00;&#x4E9B;&#x5F71;&#x54CD;&#x4E1A;&#x52A1;&#x7684;&#x6570;&#x503C;&#xFF0C;&#x6BD4;&#x5982;&#x662F;&#x5426;&#x7B2C;&#x4E00;&#x6B21;&#x6FC0;&#x6D3B;&#x5E94;&#x7528;&#xFF0C;&#x7B2C;&#x4E00;&#x6B21;&#x6FC0;&#x6D3B;&#x7684;&#x65F6;&#x95F4;&#xFF0C;ABTest&#x5206;&#x7EC4;&#x6807;&#x5FD7;&#x7B49;&#x7B49;&#x3002;&#x5728;&#x5F00;&#x53D1;&#x7684;&#x5E94;&#x7528;&#x4E2D;&#xFF0C;&#x5F88;&#x591A;&#x4E0E;&#x7EDF;&#x8BA1;&#x6570;&#x636E;&#x76F8;&#x5173;&#x7684;&#x6570;&#x503C;&#x90FD;&#x662F;&#x7528;SP&#x8FDB;&#x884C;&#x5B58;&#x50A8;&#x7BA1;&#x7406;&#x7684;&#xFF0C;&#x4F7F;&#x7528;&#x8FC7;&#x7A0B;&#x4E2D;&#x7684;&#x786E;&#x56E0;&#x4E3A;&#x7406;&#x89E3;&#x4E0D;&#x6DF1;&#xFF0C;&#x51FA;&#x73B0;&#x95EE;&#x9898;&#xFF0C;&#x5F71;&#x54CD;&#x4EA7;&#x54C1;&#x51B3;&#x7B56;&#x3002;&#x56E0;&#x6B64;&#x51C6;&#x786E;&#x7406;&#x89E3;&#x4F7F;&#x7528;SP&#x5F88;&#x91CD;&#x8981;&#x3002; \b&#x672C;&#x6587;&#x4F1A;&#x53C2;&#x7167;Android-26&#x7684;&#x6E90;&#x7801;&#xFF0C;&#x5206;&#x6790;SP&#x7684;&#x539F;&#x7406;&#x548C;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x4E3B;&#x8981;&#x5305;&#x62EC;&#x4EE5;&#x4E0B;&#x51E0;&#x90E8;&#x5206;&#xFF1A; &#x5206;&#x6790;&#x5B9E;&#x73B0;\bSP&#x529F;&#x80FD;&#x7684;&#x7C7B;&#x53CA;&#x76F8;&#x4E92;&#x5173;&#x7CFB; SP&#x7684;&#x5185;&#x5BB9;&#x7684;&#x8BFB;&#x53D6;&#x3001;&#x5199;&#x5165; &#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x95EE;&#x9898; SP&#x7684;&#x4E3B;&#x8981;&#x7C7B;&#x53CA;&#x5173;&#x7CFB;&#xFF1A;SP&#x7684;&#x529F;&#x80FD;&#x5B9E;&#x73B0;&#x7684;&#x4E3B;&#x8981;&#x63A5;&#x53E3;&#x548C;&#x7C7B;&#x6709;&#xFF1A;SharedPreferences&#xFF0C;Editor&#xFF0C;SharedPreferencesImpl&#xFF0C;EditorImpl&#x4EE5;&#x53CA;ContextImpl&#xFF0C;&#x5B83;&#x4EEC;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#x4E0B;&#x56FE;(UML&#x73B0;&#x5B66;&#x73B0;&#x5356;&#xFF0C;&#x6B22;&#x8FCE;&#x6307;&#x51FA;&#x95EE;&#x9898;)&#xFF1A; &#x63A5;&#x53E3;SharedPreferences&#x5B9A;&#x4E49;&#x4E86;SP&#x63D0;&#x4F9B;SP&#x6587;&#x4EF6;&#x7684;&#x8BFB;&#x64CD;&#x4F5C;,&#x5176;&#x5305;&#x542B;&#x5B50;&#x63A5;&#x53E3;EditorImpl&#x5B9A;&#x4E49;&#x4E86;&#x5BF9;SP&#x6587;&#x4EF6;&#x5199;&#x76F8;&#x5173;&#x7684;&#x64CD;&#x4F5C;&#x3002;SharedPreferencesImpl&#x7C7B;&#x5B9E;&#x73B0;SharedPreferences&#x63A5;&#x53E3;&#xFF0C;&#x5177;&#x4F53;&#x5B9E;&#x73B0;SP&#x6587;&#x4EF6;&#x7684;&#x8BFB;&#x529F;&#x80FD;&#x4EE5;&#x53CA;&#x4E3A;&#x4FDD;&#x8BC1;&#x8BFB;&#x51C6;&#x786E;&#x800C;&#x63D0;&#x4F9B;&#x7684;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7B49;&#x6761;&#x4EF6;&#xFF0C;&#x5176;&#x5185;&#x90E8;&#x7C7B;EditorImpl&#x5B9E;&#x73B0;&#x4E86;Editor&#x63A5;&#x53E3;&#xFF0C;&#x8D1F;&#x8D23;SP&#x6587;&#x4EF6;&#x7684;&#x5B9E;&#x9645;&#x5199;&#x64CD;&#x4F5C;&#x3002;ContextImpl&#x7C7B;\b&#x5305;&#x542B;SharedPreferencesImpl&#xFF0C;&#x901A;&#x8FC7;&#x65B9;&#x6CD5;getSharedPreferences()&#x5BF9;&#x5916;&#x63D0;&#x4F9B;SP&#x5B9E;&#x4F8B;&#x4F9B;&#x5F00;&#x53D1;&#x8005;&#x4F7F;&#x7528;&#x3002; SP&#x5185;&#x5BB9;&#x7684;&#x8BFB;&#x5199;&#xFF1A; &#x83B7;&#x53D6;SP&#x5B9E;&#x4F8B; 123456789101112131415161718192021222324252627282930313233 @Overridepublic SharedPreferences getSharedPreferences(File file, int mode) { //&#x68C0;&#x67E5;&#x8BFB;&#x5199;&#x6A21;&#x5F0F; checkMode(mode); //&#x6587;&#x4EF6;&#x7EA7;&#x522B;&#x52A0;&#x5BC6;&#x68C0;&#x67E5;&#xFF1F;&#xFF08;&#x5F85;&#x8FDB;&#x4E00;&#x6B65;&#x7814;&#x7A76;&#xFF09; if (getApplicationInfo().targetSdkVersion &gt;= android.os.Build.VERSION_CODES.O) { if (isCredentialProtectedStorage() &amp;&amp; !getSystemService(StorageManager.class).isUserKeyUnlocked( UserHandle.myUserId()) &amp;&amp; !isBuggy()) { throw new IllegalStateException(&quot;SharedPreferences in credential encrypted &quot; + &quot;storage are not available until after user is unlocked&quot;); } } SharedPreferencesImpl sp; synchronized (ContextImpl.class) { final ArrayMap&lt;File, SharedPreferencesImpl&gt; cache = getSharedPreferencesCacheLocked(); sp = cache.get(file); if (sp == null) { sp = new SharedPreferencesImpl(file, mode); cache.put(file, sp); return sp; } } if ((mode &amp; Context.MODE_MULTI_PROCESS) != 0 || getApplicationInfo().targetSdkVersion &lt; android.os.Build.VERSION_CODES.HONEYCOMB) { // If somebody else (some other process) changed the prefs // file behind our back, we reload it. This has been the // historical (if undocumented) behavior. sp.startReloadIfChangedUnexpectedly(); } return sp;} &#x9996;&#x5148;&#x901A;&#x8FC7;checkMode()&#x65B9;&#x6CD5;&#x68C0;&#x67E5;&#x6587;&#x4EF6;&#x7684;&#x8BFB;&#x5199;&#x6A21;&#x5F0F;&#xFF0C;&#x7136;&#x540E;&#x9488;&#x5BF9;Android O &#x53CA;&#x4EE5;&#x4E0A;&#x7248;&#x672C;&#xFF0C;&#x8FDB;&#x884C;&#x6587;&#x4EF6;&#x52A0;&#x5BC6;&#x68C0;&#x67E5;&#xFF0C;&#x8FD9;&#x4E9B;&#x68C0;&#x67E5;&#x90FD;&#x6CA1;&#x6709;&#x95EE;&#x9898;&#x540E;&#xFF0C;&#x4ECE;&#x7F13;&#x5B58;&#x4E2D;&#x83B7;&#x53D6;&#x6216;&#x8005;&#x521B;&#x5EFA;&#x65B0;&#x7684;SP&#x5B9E;&#x4F8B;&#x5E76;&#x8FD4;&#x56DE;&#x3002;&#x5148;&#x770B;&#x4E00;&#x4E0B;checkMode&#x65B9;&#x6CD5;&#x7684;&#x5B9E;&#x73B0;&#xFF1A; 12345678910private void checkMode(int mode) { if (getApplicationInfo().targetSdkVersion &gt;= Build.VERSION_CODES.N) { if ((mode &amp; MODE_WORLD_READABLE) != 0) { throw new SecurityException(&quot;MODE_WORLD_READABLE no longer supported&quot;); } if ((mode &amp; MODE_WORLD_WRITEABLE) != 0) { throw new SecurityException(&quot;MODE_WORLD_WRITEABLE no longer supported&quot;); } } } &#x4E3A;&#x5B89;&#x5168;&#x8003;&#x8651;&#xFF0C;Android&#x5728;N&#x53CA;&#x4EE5;&#x4E0A;&#x5F7B;&#x5E95;&#x7981;&#x6B62;MODE_WORLD_READABLE&#x548C;MODE_WORLD_WRITEABLE&#x6A21;&#x5F0F;&#xFF0C;checkMode&#x65B9;&#x6CD5;&#x4E2D;&#x5177;&#x4F53;&#x505A;&#x4E86;&#x9650;&#x5236;&#x3002; 123456789synchronized (ContextImpl.class) { final ArrayMap&lt;File, SharedPreferencesImpl&gt; cache = getSharedPreferencesCacheLocked(); sp = cache.get(file); if (sp == null) { sp = new SharedPreferencesImpl(file, mode); cache.put(file, sp); return sp; } } &#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x662F;&#x4ECE;&#x7F13;&#x5B58;&#x4E2D;&#x6839;&#x636E;&#x6307;&#x5B9A;&#x7684;File&#x83B7;&#x53D6;SP&#x5B9E;&#x4F8B;&#xFF0C;getSharedPreferencesCacheLocked()&#x65B9;&#x6CD5;&#x7684;&#x5B9E;&#x73B0;&#x5982;&#x4E0B;&#xFF1A;1234567891011121314private ArrayMap&lt;File, SharedPreferencesImpl&gt; getSharedPreferencesCacheLocked() { if (sSharedPrefsCache == null) { sSharedPrefsCache = new ArrayMap&lt;&gt;(); } final String packageName = getPackageName(); ArrayMap&lt;File, SharedPreferencesImpl&gt; packagePrefs = sSharedPrefsCache.get(packageName); if (packagePrefs == null) { packagePrefs = new ArrayMap&lt;&gt;(); sSharedPrefsCache.put(packageName, packagePrefs); } return packagePrefs; } &#x9759;&#x6001;&#x53D8;&#x91CF;sSharedPrefsCache&#x7684;&#x5B9A;&#x4E49;&#x662F;&#x4E00;&#x4E2A;Key&#x4E3A;String&#x7C7B;&#x578B;&#xFF0C;Value&#x7684;ArrayMap&#x7684;ArrayMap:1234 /** * Map from package name, to preference name, to cached preferences. */private static ArrayMap&lt;String, ArrayMap&lt;File, SharedPreferencesImpl&gt;&gt; sSharedPrefsCache; &#x5B83;&#x4EE5;&#x5305;&#x540D;&#x4E3A;key,&#x5C06;&#x6BCF;&#x4E2A;&#x5E94;&#x7528;&#x4E0B;&#x7684;SP&#x5B9E;&#x4F8B;&#x7F13;&#x5B58;&#x5728;&#x4E00;&#x4E2A;ArrayMap&#x4E2D;&#x3002;&#x5176;&#x5B9E;&#x6574;&#x4E2A;&#x83B7;&#x53D6;SP&#x5B9E;&#x4F8B;&#x7684;&#x903B;&#x8F91;&#x5F88;&#x7B80;&#x5355;&#xFF1A;&#x4ECE;&#x7F13;&#x5B58;&#x4E2D;&#x67E5;&#x627E;&#xFF0C;&#x5C06;&#x67E5;&#x627E;&#x5230;&#x7684;&#x5BF9;&#x8C61;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x5C31;&#x8C03;&#x7528;SharedPreferencesImpl&#x7684;&#x6784;&#x9020;&#x65B9;&#x6CD5;&#xFF0C;&#x521B;&#x5EFA;SP&#x5B9E;&#x4F8B;&#xFF0C;&#x6DFB;&#x52A0;&#x5230;&#x7F13;&#x5B58;&#x4E2D;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x3002; SP&#x5185;&#x5BB9;&#x7684;&#x8BFB;&#x5199;&#xFF1A;&#x5148;&#x770B;&#x4E00;&#x4E0B;SharedPreferencesImpl&#x6784;&#x9020;&#x65B9;&#x6CD5;&#x7684;&#x5B9E;&#x73B0;&#xFF1A;12345678SharedPreferencesImpl(File file, int mode) { mFile = file; mBackupFile = makeBackupFile(file); mMode = mode; mLoaded = false; mMap = null; startLoadFromDisk(); } \b&#x6784;&#x9020;&#x65B9;&#x6CD5;&#x4E3B;&#x8981;&#x8FDB;&#x884C;&#x4E86;&#x5EFA;&#x7ACB;&#x5907;&#x4EFD;&#x6587;&#x4EF6;&#x5B9E;&#x4F8B;&#xFF0C;&#x52A0;&#x8F7D;&#x6587;&#x4EF6;&#x5230;&#x5185;&#x5B58;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x5728;startLoadFromDisk()&#x65B9;&#x6CD5;&#x4E2D;&#xFF0C;&#x901A;&#x8FC7;\b&#x540C;&#x6B65;&#x67B7;&#x9501;&#xFF0C;&#x542F;&#x52A8;&#x7EBF;&#x7A0B;&#x5C06;&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x52A0;&#x5165;&#x5230;&#x5185;&#x5B58;&#xFF0C;&#x8FD9;&#x91CC;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x5C42;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x4FDD;&#x969C;&#xFF1A;12345678910private void startLoadFromDisk() { synchronized (mLock) { mLoaded = false; } new Thread(&quot;SharedPreferencesImpl-load&quot;) { public void run() { loadFromDisk(); } }.start(); } &#x5177;&#x4F53;&#x8D1F;&#x8D23;&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x52A0;&#x8F7D;&#x7684;loadFromDisk()&#x65B9;&#x6CD5;&#xFF1A;123456789101112131415161718192021222324252627282930313233343536373839404142434445464748rivate void loadFromDisk() { synchronized (mLock) { if (mLoaded) { return; } if (mBackupFile.exists()) { mFile.delete(); mBackupFile.renameTo(mFile); } } // Debugging if (mFile.exists() &amp;&amp; !mFile.canRead()) { Log.w(TAG, &quot;Attempt to read preferences file &quot; + mFile + &quot; without permission&quot;); } Map map = null; StructStat stat = null; try { stat = Os.stat(mFile.getPath()); if (mFile.canRead()) { BufferedInputStream str = null; try { str = new BufferedInputStream( new FileInputStream(mFile), 16*1024); map = XmlUtils.readMapXml(str); } catch (Exception e) { Log.w(TAG, &quot;Cannot read &quot; + mFile.getAbsolutePath(), e); } finally { IoUtils.closeQuietly(str); } } } catch (ErrnoException e) { /* ignore */ } synchronized (mLock) { mLoaded = true; if (map != null) { mMap = map; mStatTimestamp = stat.st_mtime; mStatSize = stat.st_size; } else { mMap = new HashMap&lt;&gt;(); } mLock.notifyAll(); } } &#x5728;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x4E2D;&#xFF0C;&#x9996;&#x5148;&#x662F;&#x52A0;&#x9501;&#x5224;&#x65AD;&#x5F53;&#x524D;&#x72B6;&#x6001;&#xFF0C;&#x5982;&#x679C;&#x5DF2;&#x7ECF;&#x52A0;&#x8F7D;&#x5B8C;&#x6210;&#xFF0C;&#x5C31;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x91CD;&#x65B0;&#x8BBE;&#x7F6E;&#x5907;&#x4EFD;&#x7684;&#x6587;&#x4EF6;&#x5BF9;&#x8C61;&#x3002;&#x7136;&#x540E;&#x4F7F;&#x7528;XmlUtils&#x8BFB;&#x53D6;&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#xFF0C;&#x5E76;&#x4FDD;&#x5B58;&#x5230;Map&#x5BF9;&#x8C61;mMap&#x4E2D;&#xFF0C;&#x901A;&#x77E5;&#x6240;&#x6709;&#x6B63;&#x5728;&#x7B49;&#x5F85;&#x7684;&#x5BA2;&#x6237;&#xFF0C;&#x6587;&#x4EF6;&#x8BFB;&#x53D6;&#x5B8C;&#x6210;&#xFF0C;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x952E;&#x503C;&#x5BF9;&#x7684;&#x8BFB;&#x5199;&#x64CD;&#x4F5C;&#x4E86;&#x3002;&#x8FD9;&#x91CC;&#x9700;&#x8981;&#x6CE8;&#x610F;&#xFF1A;&#x7CFB;&#x7EDF;&#x4F1A;&#x4E00;&#x6B21;&#x6027;&#x628A;SP&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x8BFB;&#x5165;&#x5230;&#x5185;&#x5B58;&#x5E76;&#x4FDD;&#x5B58;&#x5728;Map&#x5BF9;&#x8C61;&#x4E2D;&#x3002;&#x8FD9;&#x5C31;&#x662F;SP&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x7684;&#x52A0;&#x8F7D;&#x8FC7;&#x7A0B;&#x3002; &#x4E0B;&#x9762;&#x6211;&#x4EEC;&#x770B;&#x770B;&#x4ECE;SP&#x6587;&#x4EF6;&#x4E2D;&#x83B7;&#x53D6;&#x503C;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x4EE5;getInt()&#x65B9;&#x6CD5;&#x4E3A;&#x4F8B;&#xFF1A;1234567public int getInt(String key, int defValue) { synchronized (mLock) { awaitLoadedLocked(); Integer v = (Integer)mMap.get(key); return v != null ? v : defValue; } } &#x9996;&#x5148;&#x52A0;&#x9501;&#xFF0C;&#x907F;&#x514D;&#x8BFB;&#x53D6;&#x5230;&#x9519;&#x8BEF;&#x7684;&#x503C;&#xFF0C;&#x7136;&#x540E;&#x8C03;&#x7528;awaitLoadedLocked()&#xFF0C;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x68C0;&#x6D4B;&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x8BFB;&#x53D6;&#x5230;mMap&#x5BF9;&#x8C61;&#x4E2D;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x8BFB;&#x53D6;&#x5B8C;&#x6210;&#xFF0C;&#x5C31;&#x963B;&#x585E;&#xFF0C;&#x76F4;&#x5230;&#x63A5;&#x6536;&#x5230;&#x8BFB;&#x53D6;&#x5B8C;&#x6210;&#x7684;&#x901A;&#x77E5;&#x4E4B;&#x540E;&#xFF0C;&#x518D;&#x4ECE;mMap&#x5BF9;&#x8C61;&#x4E2D;&#x53D6;&#x51FA;value&#xFF0C;&#x5177;&#x4F53;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;1234567891011121314private void awaitLoadedLocked() { if (!mLoaded) { // Raise an explicit StrictMode onReadFromDisk for this // thread, since the real read will be in a different // thread and otherwise ignored by StrictMode. BlockGuard.getThreadPolicy().onReadFromDisk(); } while (!mLoaded) { try { mLock.wait(); } catch (InterruptedException unused) { } } } &#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x5982;&#x679C;&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x8BFB;&#x53D6;&#x5B8C;&#x6210;&#xFF0C;getInt()&#x65B9;&#x6CD5;&#x4F1A;&#x4E00;&#x76F4;&#x963B;&#x585E;&#x3002;&#x5982;&#x679C;&#x4E0D;&#x77E5;&#x9053;&#x8FD9;&#x4E2A;&#x7EC6;&#x8282;&#xFF0C;&#x5F88;&#x5BB9;&#x6613;&#x5BFC;&#x81F4;&#x5E94;&#x7528;&#x51FA;&#x73B0;ANR&#x7684;&#x95EE;&#x9898;&#x3002;&#x6BD4;&#x5982;&#x573A;&#x666F;&#xFF1A;&#x8FDB;&#x7A0B;&#x521B;&#x5EFA;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x8FDB;&#x884C;&#x5F88;&#x591A;&#x7684;&#x903B;&#x8F91;&#x5904;&#x7406;&#xFF0C;&#x5728;UI&#x8FDB;&#x7A0B;&#x4ECE;SP&#x4E2D;&#x83B7;&#x53D6;value&#x65F6;&#xFF0C;&#x5982;&#x679C;&#x6587;&#x4EF6;&#x8BFB;&#x53D6;&#x65F6;&#x95F4;&#x957F;&#xFF0C;UI&#x8FDB;&#x7A0B;&#x88AB;&#x963B;&#x585E;&#xFF0C;&#x5BB9;&#x6613;&#x53D1;&#x751F;ANR&#x3002;&#x53E6;&#x5916;&#x7531;&#x4E8E;&#x7CFB;&#x7EDF;&#x662F;&#x4F7F;&#x7528;Map&#x7F13;&#x5B58;SP&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x952E;&#x503C;&#x5BF9;&#x7684;&#xFF0C;&#x57FA;&#x672C;&#x7C7B;&#x578B;&#x4E0D;&#x80FD;&#x4F5C;&#x4E3A;value&#x4F20;&#x5165;&#xFF0C;&#x6240;&#x4EE5;&#x60F3;&#x8BFB;&#x53D6;&#x57FA;&#x672C;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x65F6;&#xFF0C;&#x8981;&#x6C42;&#x4F20;&#x5165;&#x4E00;&#x4E2A;defaultValue&#xFF0C;&#x8003;&#x8651;&#x5230;&#x8FD0;&#x884C;&#x7684;&#x5B89;&#x5168;&#xFF0C;&#x907F;&#x514D;&#x51FA;&#x73B0;&#x7684;&#x60C5;&#x51B5;&#x662F;&#xFF0C;&#x5BA2;&#x6237;&#x5E0C;&#x671B;&#x83B7;&#x53D6;&#x4E00;&#x4E2A;int&#x503C;&#xFF0C;API&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;Null&#x7684;&#x56E7;&#x50CF;&#x3002; SP&#x7684;&#x5199;&#x5165;&#x64CD;&#x4F5C;&#x662F;&#x7531;EditorImpl&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x7684;&#x3002;&#x5BF9;SP&#x4E2D;&#x952E;&#x503C;&#x5BF9;&#x7684;&#x8BFB;&#x5199;&#x64CD;&#x4F5C;&#xFF0C;&#x5206;&#x4E24;&#x6B65;&#xFF0C;&#x7B2C;&#x4E00;&#x6B65;&#x662F;&#x7531;EditorImpl&#x76F4;&#x63A5;&#x66F4;&#x6539;mMap&#x7684;&#x503C;&#xFF1B;&#x7B2C;&#x4E8C;&#x6B65;&#xFF0C;&#x5C06;mMap&#x4E2D;&#x7684;&#x952E;&#x503C;&#x5BF9;&#x5199;&#x5165;&#x5230;&#x6587;&#x4EF6;&#x4E2D;&#x4FDD;&#x5B58;&#x3002;&#x8FD9;&#x91CC;&#x9700;&#x8981;&#x91CD;&#x70B9;&#x5173;&#x6CE8;&#x4E24;&#x4E2A;&#x65B9;&#x6CD5;&#xFF1A;apply()&#x548C;commit()&#xFF0C;&#x5B83;&#x4EEC;&#x7684;&#x5B9E;&#x73B0;&#x5982;&#x4E0B;&#xFF1A;1234567891011121314151617181920212223242526272829303132333435public void apply() { final long startTime = System.currentTimeMillis(); //&#x5C06;&#x6539;&#x52A8;&#x5438;&#x5165;&#x5230;&#x5185;&#x5BB9;&#x5185;&#x5B58; final MemoryCommitResult mcr = commitToMemory(); final Runnable awaitCommit = new Runnable() { public void run() { try { mcr.writtenToDiskLatch.await(); } catch (InterruptedException ignored) { } if (DEBUG &amp;&amp; mcr.wasWritten) { Log.d(TAG, mFile.getName() + &quot;:&quot; + mcr.memoryStateGeneration + &quot; applied after &quot; + (System.currentTimeMillis() - startTime) + &quot; ms&quot;); } } }; QueuedWork.addFinisher(awaitCommit); Runnable postWriteRunnable = new Runnable() { public void run() { awaitCommit.run(); QueuedWork.removeFinisher(awaitCommit); } }; //&#x6539;&#x52A8;&#x5DF2;&#x7ECF;&#x63D0;&#x4EA4;&#x5230;&#x5185;&#x5B58;&#x4E86;&#xFF0C;&#x7B49;&#x5F85;&#x7CFB;&#x7EDF;&#x8C03;&#x5EA6;&#x5199;&#x5165;&#x6587;&#x4EF6; SharedPreferencesImpl.this.enqueueDiskWrite(mcr, postWriteRunnable); // Okay to notify the listeners before it&apos;s hit disk // because the listeners should always get the same // SharedPreferences instance back, which has the // changes reflected in memory. notifyListeners(mcr); } 12345678910111213141516171819202122232425public boolean commit() { long startTime = 0; if (DEBUG) { startTime = System.currentTimeMillis(); } MemoryCommitResult mcr = commitToMemory(); SharedPreferencesImpl.this.enqueueDiskWrite( mcr, null /* sync write on this thread okay */); try { mcr.writtenToDiskLatch.await(); } catch (InterruptedException e) { return false; } finally { if (DEBUG) { Log.d(TAG, mFile.getName() + &quot;:&quot; + mcr.memoryStateGeneration + &quot; committed after &quot; + (System.currentTimeMillis() - startTime) + &quot; ms&quot;); } } notifyListeners(mcr); return mcr.writeToDiskResult; } &#x8FD9;&#x4E24;&#x4E2A;&#x65B9;&#x6CD5;&#x90FD;&#x505A;&#x4E86;&#x4E24;&#x4EF6;&#x4E8B;&#x60C5;&#xFF0C;&#x8C03;&#x7528;commitToMemory()&#x53CA;&#x65F6;&#x5C06;&#x6539;&#x52A8;&#x63D0;&#x4EA4;&#x5230;&#x5BF9;&#x5E94;&#x7684;&#x5185;&#x5B58;&#x533A;&#x57DF;&#xFF0C;&#x7136;&#x540E;&#x63D0;&#x4EA4;&#x4E00;&#x4E2A;&#x5199;&#x5165;&#x6587;&#x4EF6;&#x7684;&#x4EFB;&#x52A1;&#xFF0C;&#x7B49;&#x5F85;&#x7CFB;&#x7EDF;&#x8C03;&#x5EA6;&#x3002;&#x552F;&#x4E00;&#x4E0D;&#x540C;&#x7684;&#x662F;&#xFF0C;apply&#x5C06;&#x6587;&#x4EF6;&#x5199;&#x5165;&#x64CD;&#x4F5C;&#x653E;&#x5230;&#x4E00;&#x4E2A;Runnable&#x5BF9;&#x8C61;&#x4E2D;&#xFF0C;&#x7B49;&#x5F85;&#x7CFB;&#x7EDF;&#x5728;&#x5DE5;&#x4F5C;&#x7EBF;&#x7A0B;&#x4E2D;&#x8C03;&#x7528;&#x3002;commit&#x65B9;&#x6CD5;&#x5219;&#x662F;&#x76F4;&#x63A5;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E2D;&#x8FDB;&#x884C;&#x5199;&#x5165;&#x64CD;&#x4F5C;&#x3002;&#x8FD9;&#x4E00;&#x70B9;&#x53EF;&#x4EE5;&#x4ECE;&#x8C03;&#x5EA6;&#x5199;&#x5165;&#x64CD;&#x4F5C;&#x7684;enqueueDiskWrite()&#x65B9;&#x6CD5;&#x4E2D;&#x770B;&#x51FA;&#xFF1A;1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950/** * Enqueue an already-committed-to-memory result to be written * to disk. * * They will be written to disk one-at-a-time in the order * that they&apos;re enqueued. * * @param postWriteRunnable if non-null, we&apos;re being called * from apply() and this is the runnable to run after * the write proceeds. if null (from a regular commit()), * then we&apos;re allowed to do this disk write on the main * thread (which in addition to reducing allocations and * creating a background thread, this has the advantage that * we catch them in userdebug StrictMode reports to convert * them where possible to apply() ...) */ private void enqueueDiskWrite(final MemoryCommitResult mcr, final Runnable postWriteRunnable) { final boolean isFromSyncCommit = (postWriteRunnable == null); final Runnable writeToDiskRunnable = new Runnable() { public void run() { synchronized (mWritingToDiskLock) { writeToFile(mcr, isFromSyncCommit); } synchronized (mLock) { mDiskWritesInFlight--; } //&#x4F7F;&#x7528;&#x672C;&#x6B21;&#x5199;&#x5165;&#x4EFB;&#x52A1;&#x63D0;&#x4F9B;&#x7684;Runnable&#x5BF9;&#x8C61; if (postWriteRunnable != null) { postWriteRunnable.run(); } } }; // Typical #commit() path with fewer allocations, doing a write on // the current thread. if (isFromSyncCommit) { boolean wasEmpty = false; synchronized (mLock) { wasEmpty = mDiskWritesInFlight == 1; } if (wasEmpty) { writeToDiskRunnable.run(); return; } } QueuedWork.queue(writeToDiskRunnable, !isFromSyncCommit); } &#x5982;&#x679C;&#x5728;&#x63D0;&#x4EA4;&#x5199;&#x5165;&#x4EFB;&#x52A1;&#x65F6;&#xFF0C;&#x6CA1;&#x6709;&#x63D0;&#x4F9B;&#x5BF9;&#x5E94;&#x7684;&#x8C03;&#x5EA6;Runnable&#x5BF9;&#x8C61;&#xFF0C;&#x5373;&#x6B64;&#x6B21;&#x8C03;&#x5EA6;&#x4EFB;&#x52A1;&#x662F;&#x901A;&#x8FC7;commit()&#x65B9;&#x6CD5;&#x63D0;&#x4EA4;&#xFF0C;&#x90A3;&#x4E48;&#x4F1A;&#x5728;&#x5F53;&#x524D;&#x7684;&#x7EBF;&#x7A0B;&#x4E2D;&#x8FDB;&#x5199;&#x64CD;&#x4F5C;&#x3002;&#x8FD9;&#x5C31;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;&#x63D0;&#x5021;&#x4F7F;&#x7528;apply&#x65B9;&#x6CD5;&#x7684;&#x539F;&#x56E0;&#x3002;&#x5176;&#x5B9E;&#x5927;&#x5BB6;&#x6839;&#x672C;&#x4E0D;&#x9700;&#x8981;&#x5173;&#x6CE8;apply&#x548C;commit&#x4E24;&#x4E2A;&#x65B9;&#x6CD5;&#x5728;&#x6570;&#x636E;&#x4E00;&#x81F4;&#x6027;&#x7684;&#x5DEE;&#x5F02;&#xFF0C;&#x8FD9;&#x4E24;&#x4E2A;&#x65B9;&#x6CD5;&#x5BF9;&#x6570;&#x636E;&#x7684;&#x64CD;&#x4F5C;&#x90FD;&#x662F;&#x4E00;&#x81F4;&#x7684;&#xFF0C;&#x552F;&#x4E00;&#x533A;&#x522B;&#x5C31;&#x662F;&#x5199;&#x5165;&#x6587;&#x4EF6;&#x65F6;&#x4E00;&#x4E2A;&#x53E6;&#x8D77;&#x7EBF;&#x7A0B;&#xFF0C;&#x4E00;&#x4E2A;&#x5728;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x3002; &#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x95EE;&#x9898;&#xFF1A; SP&#x6587;&#x4EF6;&#x7684;&#x8BFB;&#x5199;&#x662F;&#x4E00;&#x6B21;I/O&#x64CD;&#x4F5C;&#xFF0C;&#x5C3D;&#x91CF;&#x907F;&#x5F00;&#x8BBE;&#x5907;&#x8D44;&#x6E90;&#x7D27;&#x5F20;&#x7684;&#x573A;&#x666F;&#x64CD;&#x4F5C;&#x3002; getValue&#x65B9;&#x6CD5;&#x662F;&#x7EBF;&#x7A0B;&#x963B;&#x585E;&#x7684; apply&#x65B9;&#x6CD5;&#x5BF9;app&#x6027;&#x80FD;&#x7684;&#x5F71;&#x54CD;&#x5C0F;&#xFF0C;&#x5C3D;&#x91CF;&#x4F7F;&#x7528;apply&#x65B9;&#x6CD5;&#x3002; &#x5C3D;&#x91CF;&#x94FE;&#x5F0F;&#x8C03;&#x7528; Editor&#x5BF9;&#x8C61;&#xFF0C;&#x56E0;&#x4E3A;S&#x6BCF;&#x6B21;&#x8C03;&#x7528;haredPreferencesImpl&#x5BF9;&#x8C61;&#x7684;edit()&#x65B9;&#x6CD5;&#x90FD;&#x4F1A;&#x521B;&#x5EFA;&#x65B0;&#x7684;Editor&#x5B9E;&#x4F8B; &#x6BCF;&#x4E2A;Editor&#x5B9E;&#x4F8B;&#x5305;&#x542B;&#x4E00;&#x4E2A;map&#xFF0C;&#x5305;&#x542B;&#x8BE5;Editor&#x5B9E;&#x4F8B;&#x64CD;&#x4F5C;&#x7684;&#x6240;&#x6709;&#x952E;&#x503C;&#x5BF9;&#x3002;&#x5728;&#x8C03;&#x7528;apply&#x6216;&#x8005;commit&#x65B9;&#x6CD5;&#x4E4B;&#x540E;&#x4F1A;&#x9996;&#x5148;&#x5199;&#x5230;mMap&#x4E2D;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x4E0D;&#x8C03;&#x7528;&#x63D0;&#x4EA4;&#x65B9;&#x6CD5;&#xFF0C;&#x90A3;&#x4E48;&#x64CD;&#x4F5C;&#x7684;&#x952E;&#x503C;&#x5BF9;&#x4F1A;&#x88AB;&#x4E22;&#x5F03;&#x3002;","raw":null,"content":null,"categories":[{"name":"Technology","slug":"Technology","permalink":"http://yoursite.com/categories/Technology/"}],"tags":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/tags/Android/"}]},{"title":"Mac 10.12.5 编译Android源码","slug":"Mac-10-12-5-编译Android源码","date":"2017-05-29T13:09:32.000Z","updated":"2017-05-30T02:57:58.000Z","comments":true,"path":"2017/05/29/Mac-10-12-5-编译Android源码/","link":"","permalink":"http://yoursite.com/2017/05/29/Mac-10-12-5-编译Android源码/","excerpt":"","text":"&#x5728;Mac &#x7CFB;&#x7EDF;&#x4E0A;&#x4E0B;&#x8F7D;&#x7F16;&#x8BD1;Android&#x6E90;&#x7801;&#xFF0C;&#x56E0;&#x4E3A;&#x4E0B;&#x8F7D;&#x7F16;&#x8BD1;&#x6E90;&#x7801;&#x662F;&#x53C2;&#x7167;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x64CD;&#x4F5C;&#x7684;&#xFF0C;&#x6574;&#x4E2A;&#x8FC7;&#x7A0B;&#x6BD4;&#x8F83;&#x987A;&#x5229;&#x3002;&#x672C;&#x6587;&#x4E3B;&#x8981;&#x8BB0;&#x5F55;&#x6574;&#x4E2A;&#x8FC7;&#x7A0B;&#x4E2D;&#x81EA;&#x5DF1;&#x9047;&#x5230;&#x7684;&#x95EE;&#x9898;&#x3002; &#x8F6F;&#x786C;&#x4EF6;&#x73AF;&#x5883;&#xFF1A; &#x7535;&#x8111;&#xFF1A;14&#x5E74;&#x4E2D; MBP Pro 256SSD + 500G&#x79FB;&#x52A8;&#x786C;&#x76D8; &#x7CFB;&#x7EDF;&#x7248;&#x672C;&#xFF1A;Mac OS 10.12.5 JDK&#x7248;&#x672C;&#xFF1A;Java1.8 &#x6E90;&#x7801;&#x4E0B;&#x8F7D;&#x8FC7;&#x7A0B;&#xFF1A; &#x7F51;&#x7EDC;&#x73AF;&#x5883;&#xFF1A;&#x4E2D;&#x79FB;&#x52A8; 50M&#x5149;&#x7EA4; &#x53C2;&#x8003;&#x6587;&#x7AE0;&#x4E2D;&#xFF0C;&#x4F7F;&#x7528;&#x7684;&#x662F;&#x79D1;&#x5927;&#x7684;&#x6E90;(&#x4E2A;&#x4EBA;&#x611F;&#x89C9;&#x6BD4;&#x6E05;&#x534E;&#x7684;&#x6E90;&#x597D;) &#x5EFA;&#x8BAE;&#x4F7F;&#x7528;&#x6709;&#x7EBF;&#x7F51;&#x7EDC;&#x4E0B;&#x8F7D;(&#x4E3A;&#x6B64;&#x7279;&#x610F;&#x4E70;&#x4E86;&#x4E00;&#x4E2A;&#x96F7;&#x7535;-&#x4EE5;&#x592A;&#x7F51;&#x8F6C;&#x63A5;&#x5934;)&#xFF0C;&#x6709;&#x7EBF;&#x7F51;&#x7EDC;&#x7F51;&#x901F;&#x7A33;&#x5B9A;&#xFF0C;&#x80FD;&#x6709;&#x6548;&#x51CF;&#x5C11;&#x56E0;&#x7F51;&#x7EDC;&#x5BFC;&#x81F4;&#x7684;&#x4EE3;&#x7801;&#x540C;&#x6B65;&#x4E2D;&#x65AD;&#x7684;&#x95EE;&#x9898;&#x3002; &#x6211;&#x540C;&#x6B65;&#x65F6;&#x5E73;&#x5747;&#x7F51;&#x901F;5.4M/S&#x4F5C;&#x7528;&#xFF0C;&#x5927;&#x6982;&#x4E24;&#x4E2A;&#x5C0F;&#x65F6;&#x591A;&#x540C;&#x6B65;&#x5B8C;&#x6210;. &#x7F16;&#x8BD1;&#x8FC7;&#x7A0B;&#xFF1A; &#x6574;&#x4E2A;&#x7F16;&#x8BD1;&#x8FC7;&#x7A0B;&#x6309;&#x7167;&#x5F15;&#x7528;&#x7684;&#x6587;&#x7AE0;&#x4E2D;&#x7684;&#x65B9;&#x6CD5;&#x8FDB;&#x884C;&#x5373;&#x53EF;&#xFF0C;&#x6BCF;&#x4E2A;&#x4EBA;&#x9047;&#x5230;&#x7684;&#x95EE;&#x9898;&#x53EF;&#x80FD;&#x4E0D;&#x592A;&#x4E00;&#x6837;&#xFF0C;&#x6211;&#x9047;&#x5230;&#x4EE5;&#x4E0B;&#x51E0;&#x4E2A;&#x95EE;&#x9898;&#xFF1A; &#x65E0;&#x6CD5;&#x542F;&#x52A8;Jack Server,&#x5177;&#x4F53;&#x4FE1;&#x606F;&#x5982;&#x4E0B;&#xFF1A; 1234Unsupported curl, please use a curl not based on SecureTransportJack server installation not foundUnsupported curl, please use a curl not based on SecureTransportUnsupported curl, please use a curl not based on SecureTransport &#x4E0A;&#x8FF0;&#x95EE;&#x9898;&#x662F;Curl&#x7248;&#x672C;&#x4E0E;Jack&#x5DE5;&#x5177;&#x4E0D;&#x517C;&#x5BB9;&#x5BFC;&#x81F4;&#x7684;&#x3002;&#x89E3;&#x51B3;&#x529E;&#x6CD5;&#x5982;&#x4E0B;&#xFF1A; 1. &#x5378;&#x8F7D;&#x672C;&#x5730;&#x7684;Curl&#x7248;&#x672C;&#xFF1A; 1234567 brew uninstall curl ``` 2. openssl&#x7F16;&#x8BD1;&#x7684;curl,&#x5E76;&#x589E;&#x52A0;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x5230;. bash_profile&#x6587;&#x4EF6;&#x4E2D;&#xFF1A; ```Log brew install curl --with-openssl export PATH=$(brew --prefix curl)/bin:$PATH &#x7136;&#x540E;&#x8FD0;&#x884C;&#x7F16;&#x8BD1;&#x547D;&#x4EE4;&#x7EE7;&#x7EED;&#x7F16;&#x8BD1;&#x5373;&#x53EF;&#x3002; &#x7F16;&#x8BD1;idegen&#x6A21;&#x5757;&#x9047;&#x5230;&#x5982;&#x4E0B;&#x9519;&#x8BEF;&#xFF1A; 1Couldn&apos;t locate the directory development/tools/idegen &#x51FA;&#x73B0;&#x4E0A;&#x8FF0;&#x95EE;&#x9898;&#x7684;&#x539F;&#x56E0;&#x662F;&#x6211;&#x4F7F;&#x7528;zsh&#x7EC8;&#x7AEF;&#x8FD0;&#x884C;&#x7684;&#x4E00;&#x7CFB;&#x5217;&#x547D;&#x4EE4;&#xFF0C;&#x89E3;&#x51B3;&#x65B9;&#x6CD5;&#x662F;&#xFF0C;&#x5207;&#x6362;&#x5230;bash,&#x8FDB;&#x5165;&#x5230;&#x6E90;&#x7801;&#x7684;&#x6839;&#x76EE;&#x5F55;&#xFF0C;&#x8FD0;&#x884C;&#xFF1A; 1mmm development/tools/idegen/ &#x4E0B;&#x8F7D;&#x7F16;&#x8BD1;&#x8FC7;&#x7A0B;&#x4E3B;&#x8981;&#x9047;&#x5230;&#x4E0A;&#x9762;&#x4E09;&#x4E2A;&#x95EE;&#x9898;&#x3002;","raw":null,"content":null,"categories":[{"name":"Technology","slug":"Technology","permalink":"http://yoursite.com/categories/Technology/"}],"tags":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/tags/Android/"}]},{"title":"Android-Process-Priority","slug":"Android-Process-Priority","date":"2017-01-01T13:34:45.000Z","updated":"2017-01-01T14:45:14.000Z","comments":true,"path":"2017/01/01/Android-Process-Priority/","link":"","permalink":"http://yoursite.com/2017/01/01/Android-Process-Priority/","excerpt":"","text":"&#x7B80;&#x5355;&#x4ECB;&#x7ECD;Android&#x7CFB;&#x7EDF;&#x7684;&#x8FDB;&#x7A0B;&#x4F18;&#x5148;&#x7EA7;&#x548C;&#x8FDB;&#x7A0B;&#x56DE;&#x6536;&#x7B56;&#x7565;&#xFF0C;&#x4E3A;&#x540E;&#x9762;&#x8FDB;&#x7A0B;&#x4FDD;&#x6D3B;&#x62C9;&#x6D3B;&#x505A;&#x51C6;&#x5907;&#x3002; 1. &#x8FDB;&#x7A0B;&#x7684;&#x4F18;&#x5148;&#x7EA7;Android&#x7CFB;&#x7EDF;&#x4E2D;&#x7684;&#x8FDB;&#x7A0B;&#x6309;&#x4F18;&#x5148;&#x7EA7;&#x5212;&#x5206;&#x4E3A;5&#x7EA7;&#xFF0C;&#x6309;&#x4F18;&#x5148;&#x7EA7;&#x7531;&#x9AD8;&#x5230;&#x5E95;&#x4F9D;&#x6B21;&#x662F;&#xFF1A; 1. &#x524D;&#x53F0;&#x8FDB;&#x7A0B; 2. &#x53EF;&#x89C1;&#x8FDB;&#x7A0B; 3. &#x670D;&#x52A1;&#x8FDB;&#x7A0B; 4. &#x540E;&#x53F0;&#x8FDB;&#x7A0B; 5. &#x7A7A;&#x8FDB;&#x7A0B; 1.1 &#x524D;&#x53F0;&#x8FDB;&#x7A0B;&#x4EE5;&#x4E0B;5&#x79CD;&#x60C5;&#x5F62;&#x5C5E;&#x4E8E;&#x524D;&#x53F0;&#x8FDB;&#x7A0B;&#xFF1A; 1. &#x7528;&#x6237;&#x6B63;&#x5728;&#x4EA4;&#x4E92;&#x7684;Activity 2. &#x524D;&#x53F0;&#x8FD0;&#x884C;&#x7684;Service 3. &#x7ED1;&#x5B9A;&#x5230;&#x7528;&#x6237;&#x6B63;&#x5728;&#x4EA4;&#x4E92;&#x7684;Activity&#x7684;Service 4. &#x6B63;&#x5728;&#x6267;&#x884C;onReceive()&#x65B9;&#x6CD5;&#x7684;BroadcastReceiver 5. &#x6B63;&#x5728;&#x6267;&#x884C;&#x751F;&#x547D;&#x5468;&#x671F;&#x65B9;&#x6CD5;&#xFF1A;onCreate()&#x3001;onStart()&#x3001;onDestroy()&#x7684;Service &#x7CFB;&#x7EDF;&#x53EA;&#x6709;&#x5728;&#x975E;&#x5E38;&#x7D27;&#x5F20;&#xFF0C;&#x96BE;&#x4EE5;&#x7EF4;&#x6301;&#x4ED6;&#x4EEC;&#x6B63;&#x5E38;&#x8FD0;&#x884C;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x624D;&#x4F1A;&#x7ED3;&#x675F;&#x524D;&#x53F0;&#x8FDB;&#x7A0B;&#x3002; 1.2 &#x53EF;&#x89C1;&#x8FDB;&#x7A0B;&#x4EE5;&#x4E0B;2&#x79CD;&#x5E38;&#x89C1;&#x60C5;&#x5F62;&#x5C5E;&#x4E8E;&#x53EF;&#x89C1;&#x8FDB;&#x7A0B;&#xFF1A; 1. &#x4E0D;&#x5728;&#x524D;&#x53F0;&#x4EA4;&#x4E92;&#xFF0C;&#x4F46;&#x7528;&#x6237;&#x4ECD;&#x53EF;&#x89C1;&#x7684;Activity&#x3002;&#x4F8B;&#x5982;&#xFF1A;&#x67D0;app&#x7684;&#x4E00;&#x4E2A;Activity A&#x6B63;&#x8FD0;&#x884C;&#x5728;&#x524D;&#x53F0;&#xFF0C;&#x53E6;&#x4E00;app&#x5F39;&#x51FA;&#x4E00;&#x4E2A;&#x56DB;&#x5468;&#x900F;&#x660E;&#x7684;dialog&#x8986;&#x76D6;&#x5728;&#x4E86;A&#x4E0A;&#x9762;&#xFF0C;&#x6B64;&#x65F6;&#xFF0C;&#x5305;&#x542B;Activity A&#x7684;app&#xFF0C;&#x5176;&#x8FDB;&#x7A0B;&#x7B49;&#x7EA7;&#x5C31;&#x662F;&#x53EF;&#x89C1;&#x8FDB;&#x7A0B;&#x3002; 2. &#x7ED1;&#x5B9A;&#x5230;&#x53EF;&#x89C1;&#x72B6;&#x6001;&#x4E0B;Activity&#x7684;Service. &#x7CFB;&#x7EDF;&#x53EA;&#x6709;&#x5728;&#x4E3A;&#x7EF4;&#x6301;&#x524D;&#x53F0;&#x8FDB;&#x7A0B;&#x8FD0;&#x884C;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x624D;&#x4F1A;&#x7EC8;&#x6B62;&#x53EF;&#x89C1;&#x8FDB;&#x7A0B;&#x3002; 1.3 &#x670D;&#x52A1;&#x8FDB;&#x7A0B;&#x670D;&#x52A1;&#x8FDB;&#x7A0B;&#xFF0C;&#x987E;&#x540D;&#x601D;&#x4E49;&#xFF0C;&#x5C31;&#x662F;&#x4E0D;&#x5C5E;&#x4E8E;&#x524D;&#x4E24;&#x7C7B;&#x8FDB;&#x7A0B;&#xFF0C;&#x4E14;&#x8FD0;&#x884C;&#x7740;&#x540E;&#x53F0;&#x670D;&#x52A1;&#x4E14;&#x7684;&#x8FDB;&#x7A0B;&#x3002;&#x5F88;&#x591A;app &#x90FD;&#x4F1A;&#x6709;&#x540E;&#x53F0;&#x670D;&#x52A1;&#x505A;&#x4E00;&#x4E9B;&#x7528;&#x6237;&#x5173;&#x7CFB;&#x7684;&#x64CD;&#x4F5C;&#x6216;&#x8005;&#x63D0;&#x4F9B;&#x63D0;&#x4F9B;&#x7528;&#x6237;&#x9700;&#x8981;&#x7684;&#x5DE5;&#x4F5C;&#xFF0C;&#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6B63;&#x5728;&#x8C03;&#x7528;startService()&#x65B9;&#x6CD5;&#x7684;&#x8FDB;&#x7A0B;&#xFF0C;&#x8BA4;&#x4E3A;&#x662F;&#x670D;&#x52A1;&#x8FDB;&#x7A0B;&#x3002; &#x7CFB;&#x7EDF;&#x5BF9;&#x4E8E;&#x670D;&#x52A1;&#x8FDB;&#x7A0B;&#x57FA;&#x672C;&#x7684;&#x5904;&#x7406;&#x65B9;&#x5F0F;&#x662F;&#xFF1A;&#x53EA;&#x6709;&#x5185;&#x5B58;&#x4E0D;&#x8DB3;&#x4EE5;&#x652F;&#x6491;&#x524D;&#x53F0;&#x8FDB;&#x7A0B;&#x548C;&#x53EF;&#x89C1;&#x8FDB;&#x7A0B;&#x8FD0;&#x884C;&#x65F6;&#xFF0C;&#x624D;&#x4F1A;&#x7EC8;&#x6B62;&#x670D;&#x52A1;&#x8FDB;&#x7A0B;&#x3002; 1.4 &#x540E;&#x53F0;&#x8FDB;&#x7A0B;&#x4E0D;&#x5C5E;&#x4E8E;&#x4EE5;&#x4E0A;3&#x7C7B;&#xFF0C;&#x5DF2;&#x7ECF;&#x8C03;&#x7528;onStop()&#x65B9;&#x6CD5;&#x7684;Activity&#x7684;&#x8FDB;&#x7A0B;&#xFF0C;&#x6B64;&#x65F6;&#x8FDB;&#x7A0B;&#x5BF9;&#x7528;&#x6237;&#x662F;&#x4E0D;&#x53EF;&#x89C1;&#x7684;&#x3002; &#x7CFB;&#x7EDF;&#x4F1A;&#x5C06;&#x540E;&#x53F0;&#x8FDB;&#x7A0B;&#x7F13;&#x5B58;&#x5728;LRU&#x5217;&#x8868;&#x4E2D;&#xFF0C;&#x4FDD;&#x8BC1;&#x7528;&#x6237;&#x6700;&#x540E;&#x4EA4;&#x4E92;&#x7684;app&#x8FDB;&#x7A0B;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x88AB;&#x7EC8;&#x6B62;&#x3002; 2. &#x8FDB;&#x7A0B;&#x56DE;&#x6536;&#x7B56;&#x7565;&#x5728;Android&#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x7CFB;&#x7EDF;&#x4E3A;app&#x7684;&#x8FDB;&#x7A0B;&#x8BBE;&#x5B9A;&#x4E86;&#x4E00;&#x4E2A;&#x7C7B;&#x4F3C;&#x6807;&#x7B7E;&#x4F5C;&#x7528;&#x7684;&#x9608;&#x503C;&#xFF0C;&#x7CFB;&#x7EDF;&#x4F1A;&#x6839;&#x636E;&#x6BCF;&#x4E2A;&#x8FDB;&#x7A0B;&#x7684;&#x9608;&#x503C;&#xFF0C;&#x91C7;&#x53D6;&#x4E0D;&#x540C;&#x7684;&#x5185;&#x5B58;&#x56DE;&#x6536;&#x673A;&#x5236;&#x3002; &#x5173;&#x4E8E;OOM_ADJ&#x9608;&#x503C;&#x7684;&#x8BF4;&#x660E;&#x5982;&#x4E0B;&#xFF1A; &#x524D;&#x9762;&#x4ECB;&#x7ECD;&#x7684;Android&#x8FDB;&#x7A0B;&#xFF0C;&#x5206;&#x6563;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x989C;&#x8272;&#x4E2D;&#xFF0C;&#x7EA2;&#x8272;&#x8868;&#x793A;&#x6BD4;&#x8F83;&#x5BB9;&#x6613;&#x88AB;&#x7EC8;&#x6B62;&#x7684;&#x8FDB;&#x7A0B;&#xFF0C;&#x7EFF;&#x8272;&#x8868;&#x793A;&#x4E0D;&#x5BB9;&#x6613;&#x88AB;&#x7EC8;&#x6B62;&#x7684;&#x8FDB;&#x7A0B;&#xFF0C;&#x5269;&#x4F59;&#x7684;&#x662F;&#x975E;Android&#x8FDB;&#x7A0B;&#x3002;&#x8FDB;&#x7A0B;&#x9608;&#x503C;&#x8D8A;&#x5927;&#xFF0C;&#x8D8A;&#x5BB9;&#x6613;&#x88AB;&#x7CFB;&#x7EDF;&#x7EC8;&#x6B62;&#x3002;&#x5982;&#x679C;&#x9608;&#x503C;&#x76F8;&#x540C;&#xFF0C;&#x7CFB;&#x7EDF;&#x4F1A;&#x6839;&#x636E;&#x5404;&#x4E2A;&#x8FDB;&#x7A0B;&#x5360;&#x7528;&#x7684;&#x5185;&#x5B58;&#x548C;&#x5B58;&#x6D3B;&#x65F6;&#x95F4;&#x8FDB;&#x884C;&#x7EC8;&#x6B62;&#x3002; &#x4EE5;&#x4E0B;&#x662F;&#x8FDB;&#x7A0B;&#x88AB;&#x6740;&#x6B7B;&#x7684;&#x51E0;&#x79CD;&#x60C5;&#x5F62;&#xFF1A; &#x7EFC;&#x4E0A;&#x53EF;&#x77E5;&#xFF0C;&#x8FDB;&#x7A0B;&#x4FDD;&#x6D3B;&#x4E0E;&#x62C9;&#x6D3B;&#x7684;&#x91CD;&#x70B9;&#x5C31;&#x53EA;&#x6709;&#x4E24;&#x4E2A;&#xFF1A;&#x63D0;&#x4F9B;&#x8FDB;&#x7A0B;&#x4F18;&#x5148;&#x7EA7;&#xFF0C;&#x51CF;&#x5C11;&#x8FDB;&#x7A0B;&#x5185;&#x5B58;&#x5360;&#x7528;&#x3002;","raw":null,"content":null,"categories":[{"name":"Technology","slug":"Technology","permalink":"http://yoursite.com/categories/Technology/"}],"tags":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/tags/Android/"}]},{"title":"Hello World","slug":"hello-world","date":"2016-12-25T05:08:54.000Z","updated":"2016-12-25T05:08:54.000Z","comments":true,"path":"2016/12/25/hello-world/","link":"","permalink":"http://yoursite.com/2016/12/25/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","raw":null,"content":null,"categories":[],"tags":[]}]}